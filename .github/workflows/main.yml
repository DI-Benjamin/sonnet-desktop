name: Build & Publish (Electron Forge)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Optional tag to create before publishing (e.g. v1.0.0)"
        required: false
        default: ""
  push:
    tags:
      - "v*"

permissions:
  contents: write   # required for creating release drafts

concurrency:
  group: forge-publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  forge:
    name: ${{ matrix.os }} â€¢ Node ${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node: [20]

    env:
      # electron-forge's GitHub publisher looks for GH_TOKEN
      GH_TOKEN: ${{ secrets.GH_TOKEN != '' && secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
      ELECTRON_CACHE: ${{ runner.temp }}/electron
      npm_config_fund: "false"
      npm_config_audit: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install Linux build deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            rpm fakeroot dpkg-dev xz-utils libarchive-tools

      - name: Enable longpaths (Windows)
        if: runner.os == 'Windows'
        run: git config --system core.longpaths true

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
        shell: bash

      - name: Verify electron-forge
        run: npx electron-forge --version

      # Build & publish (uses your package.json "publish": "electron-forge publish")
      - name: Publish with Electron Forge
        run: npm run publish

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: |
            out/**
            dist/**
          if-no-files-found: ignore
